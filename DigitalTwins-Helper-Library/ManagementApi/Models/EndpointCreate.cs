// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class EndpointCreate
    {
        /// <summary>
        /// Initializes a new instance of the EndpointCreate class.
        /// </summary>
        public EndpointCreate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointCreate class.
        /// </summary>
        /// <param name="type">Endpoint type. Possible values include:
        /// 'ServiceBus', 'EventGrid', 'EventHub'</param>
        /// <param name="eventTypes">Type of events to send to this
        /// endpoint</param>
        /// <param name="connectionString">Endpoint's primary key or primary
        /// connection string</param>
        /// <param name="secondaryConnectionString">Endpoint's secondary key or
        /// secondary connection string</param>
        /// <param name="path">Path to the endpoint, for example TopicName or
        /// EventHubName</param>
        public EndpointCreate(string type, System.Collections.Generic.IList<string> eventTypes, string connectionString, string secondaryConnectionString = default(string), string path = default(string))
        {
            Type = type;
            EventTypes = eventTypes;
            ConnectionString = connectionString;
            SecondaryConnectionString = secondaryConnectionString;
            Path = path;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets endpoint type. Possible values include: 'ServiceBus',
        /// 'EventGrid', 'EventHub'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets type of events to send to this endpoint
        /// </summary>
        [JsonProperty(PropertyName = "eventTypes")]
        public System.Collections.Generic.IList<string> EventTypes { get; set; }

        /// <summary>
        /// Gets or sets endpoint's primary key or primary connection string
        /// </summary>
        [JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString { get; set; }

        /// <summary>
        /// Gets or sets endpoint's secondary key or secondary connection
        /// string
        /// </summary>
        [JsonProperty(PropertyName = "secondaryConnectionString")]
        public string SecondaryConnectionString { get; set; }

        /// <summary>
        /// Gets or sets path to the endpoint, for example TopicName or
        /// EventHubName
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (EventTypes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EventTypes");
            }
            if (ConnectionString == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConnectionString");
            }
        }
    }
}
