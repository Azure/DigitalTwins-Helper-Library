// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ConditionRetrieve
    {
        /// <summary>
        /// Initializes a new instance of the ConditionRetrieve class.
        /// </summary>
        public ConditionRetrieve()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConditionRetrieve class.
        /// </summary>
        /// <param name="id">The identifier</param>
        /// <param name="target">What object the condition applies to: the
        /// sensor, its parent device or its parent space. Possible values
        /// include: 'Sensor', 'SensorDevice', 'SensorSpace'</param>
        /// <param name="path">Case sensitive JSON path which is evaluated
        /// against the target</param>
        /// <param name="value">Value to compare against</param>
        /// <param name="comparison">Type of comparison to perform. Possible
        /// values include: 'Equals', 'NotEquals', 'Contains'</param>
        public ConditionRetrieve(System.Guid? id = default(System.Guid?), string target = default(string), string path = default(string), string value = default(string), string comparison = default(string))
        {
            Id = id;
            Target = target;
            Path = path;
            Value = value;
            Comparison = comparison;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the identifier
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets what object the condition applies to: the sensor, its
        /// parent device or its parent space. Possible values include:
        /// 'Sensor', 'SensorDevice', 'SensorSpace'
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

        /// <summary>
        /// Gets or sets case sensitive JSON path which is evaluated against
        /// the target
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets value to compare against
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets type of comparison to perform. Possible values
        /// include: 'Equals', 'NotEquals', 'Contains'
        /// </summary>
        [JsonProperty(PropertyName = "comparison")]
        public string Comparison { get; set; }

    }
}
