// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SensorValue
    {
        /// <summary>
        /// Initializes a new instance of the SensorValue class.
        /// </summary>
        public SensorValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SensorValue class.
        /// </summary>
        /// <param name="type">Value type, for example motion or temperature.
        /// Maps to Sensor.DataType
        /// TODO: should we rename to dataType?</param>
        /// <param name="value">Value measure</param>
        /// <param name="timestamp">Last updated date and time in UTC.</param>
        /// <param name="historicalValues">Historical values of the
        /// sensor.</param>
        public SensorValue(string type = default(string), string value = default(string), System.DateTime? timestamp = default(System.DateTime?), System.Collections.Generic.IList<SensorHistoryValue> historicalValues = default(System.Collections.Generic.IList<SensorHistoryValue>))
        {
            Type = type;
            Value = value;
            Timestamp = timestamp;
            HistoricalValues = historicalValues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets value type, for example motion or temperature. Maps to
        /// Sensor.DataType
        /// TODO: should we rename to dataType?
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets value measure
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets or sets last updated date and time in UTC.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// Gets or sets historical values of the sensor.
        /// </summary>
        [JsonProperty(PropertyName = "historicalValues")]
        public System.Collections.Generic.IList<SensorHistoryValue> HistoricalValues { get; set; }

    }
}
