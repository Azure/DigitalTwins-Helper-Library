// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class BlobMetadataRetrieve
    {
        /// <summary>
        /// Initializes a new instance of the BlobMetadataRetrieve class.
        /// </summary>
        public BlobMetadataRetrieve()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BlobMetadataRetrieve class.
        /// </summary>
        /// <param name="parentId">Parent id</param>
        /// <param name="typeId">Type identifier</param>
        /// <param name="subtypeId">Subtype identifier</param>
        /// <param name="sharing">Level of sharing. Possible values include:
        /// 'None', 'Tree', 'Global'</param>
        /// <param name="type">Primary type</param>
        /// <param name="subtype">Blob subtype</param>
        public BlobMetadataRetrieve(System.Guid id, string name, System.Guid parentId, int typeId, int subtypeId, string sharing, string type = default(string), string subtype = default(string), string description = default(string), System.Collections.Generic.IList<BlobMetadataContentInfo> contentInfos = default(System.Collections.Generic.IList<BlobMetadataContentInfo>), string fullName = default(string), System.Collections.Generic.IList<string> spacePaths = default(System.Collections.Generic.IList<string>))
        {
            Id = id;
            Name = name;
            ParentId = parentId;
            Type = type;
            Subtype = subtype;
            TypeId = typeId;
            SubtypeId = subtypeId;
            Sharing = sharing;
            Description = description;
            ContentInfos = contentInfos;
            FullName = fullName;
            SpacePaths = spacePaths;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets parent id
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public System.Guid ParentId { get; set; }

        /// <summary>
        /// Gets or sets primary type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets blob subtype
        /// </summary>
        [JsonProperty(PropertyName = "subtype")]
        public string Subtype { get; set; }

        /// <summary>
        /// Gets or sets type identifier
        /// </summary>
        [JsonProperty(PropertyName = "typeId")]
        public int TypeId { get; set; }

        /// <summary>
        /// Gets or sets subtype identifier
        /// </summary>
        [JsonProperty(PropertyName = "subtypeId")]
        public int SubtypeId { get; set; }

        /// <summary>
        /// Gets or sets level of sharing. Possible values include: 'None',
        /// 'Tree', 'Global'
        /// </summary>
        [JsonProperty(PropertyName = "sharing")]
        public string Sharing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contentInfos")]
        public System.Collections.Generic.IList<BlobMetadataContentInfo> ContentInfos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fullName")]
        public string FullName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "spacePaths")]
        public System.Collections.Generic.IList<string> SpacePaths { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Sharing == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sharing");
            }
        }
    }
}
