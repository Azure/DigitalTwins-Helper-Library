// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TreeFilterModel
    {
        /// <summary>
        /// Initializes a new instance of the TreeFilterModel class.
        /// </summary>
        public TreeFilterModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TreeFilterModel class.
        /// </summary>
        /// <param name="spaceId">Optionally filter on objects based on their
        /// location in the topology relative to the specified spaceId</param>
        /// <param name="traverse">None (the default) for the specified spaceId
        /// only, Down for space and descendants, Up for spaceId and ancestors,
        /// Any for both. Possible values include: 'None', 'Down', 'Up',
        /// 'Span'</param>
        /// <param name="minLevel">Optional filter on minimum level,
        /// inclusive</param>
        /// <param name="maxLevel">Optional filter on maximum level,
        /// inclusive</param>
        /// <param name="minRelative">Specify if min level is absolute or
        /// relative</param>
        /// <param name="maxRelative">Specify if max level is absolute or
        /// relative</param>
        public TreeFilterModel(System.Guid? spaceId = default(System.Guid?), string traverse = default(string), int? minLevel = default(int?), int? maxLevel = default(int?), bool? minRelative = default(bool?), bool? maxRelative = default(bool?))
        {
            SpaceId = spaceId;
            Traverse = traverse;
            MinLevel = minLevel;
            MaxLevel = maxLevel;
            MinRelative = minRelative;
            MaxRelative = maxRelative;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets optionally filter on objects based on their location
        /// in the topology relative to the specified spaceId
        /// </summary>
        [JsonProperty(PropertyName = "spaceId")]
        public System.Guid? SpaceId { get; set; }

        /// <summary>
        /// Gets or sets none (the default) for the specified spaceId only,
        /// Down for space and descendants, Up for spaceId and ancestors, Any
        /// for both. Possible values include: 'None', 'Down', 'Up', 'Span'
        /// </summary>
        [JsonProperty(PropertyName = "traverse")]
        public string Traverse { get; set; }

        /// <summary>
        /// Gets or sets optional filter on minimum level, inclusive
        /// </summary>
        [JsonProperty(PropertyName = "minLevel")]
        public int? MinLevel { get; set; }

        /// <summary>
        /// Gets or sets optional filter on maximum level, inclusive
        /// </summary>
        [JsonProperty(PropertyName = "maxLevel")]
        public int? MaxLevel { get; set; }

        /// <summary>
        /// Gets or sets specify if min level is absolute or relative
        /// </summary>
        [JsonProperty(PropertyName = "minRelative")]
        public bool? MinRelative { get; set; }

        /// <summary>
        /// Gets or sets specify if max level is absolute or relative
        /// </summary>
        [JsonProperty(PropertyName = "maxRelative")]
        public bool? MaxRelative { get; set; }

    }
}
