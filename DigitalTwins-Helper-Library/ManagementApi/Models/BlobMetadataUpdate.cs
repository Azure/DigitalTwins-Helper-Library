// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BlobMetadataUpdate
    {
        /// <summary>
        /// Initializes a new instance of the BlobMetadataUpdate class.
        /// </summary>
        public BlobMetadataUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BlobMetadataUpdate class.
        /// </summary>
        /// <param name="sharing">Level of sharing. Possible values include:
        /// 'None', 'Tree', 'Global'</param>
        public BlobMetadataUpdate(string name = default(string), string sharing = default(string), string description = default(string), bool? deleteOlderVersions = default(bool?))
        {
            Name = name;
            Sharing = sharing;
            Description = description;
            DeleteOlderVersions = deleteOlderVersions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets level of sharing. Possible values include: 'None',
        /// 'Tree', 'Global'
        /// </summary>
        [JsonProperty(PropertyName = "sharing")]
        public string Sharing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deleteOlderVersions")]
        public bool? DeleteOlderVersions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name != null)
            {
                if (Name.Length > 64)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Name", 64);
                }
                if (Name.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Name", 0);
                }
            }
            if (Description != null)
            {
                if (Description.Length > 4000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Description", 4000);
                }
                if (Description.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Description", 0);
                }
            }
        }
    }
}
