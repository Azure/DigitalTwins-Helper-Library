// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class UserCreateWithSpace
    {
        /// <summary>
        /// Initializes a new instance of the UserCreateWithSpace class.
        /// </summary>
        public UserCreateWithSpace()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserCreateWithSpace class.
        /// </summary>
        /// <param name="spaceId">Parent space Id</param>
        /// <param name="upn">User Principal Name, e.g. user@domain</param>
        /// <param name="firstName">First name</param>
        /// <param name="lastName">Last Name</param>
        /// <param name="managerName">Manager name</param>
        /// <param name="metadata">User metadata such as skills, interests,
        /// etc.</param>
        public UserCreateWithSpace(System.Guid spaceId, string upn, Location location = default(Location), string firstName = default(string), string lastName = default(string), string managerName = default(string), System.Collections.Generic.IDictionary<string, string> metadata = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<ExtendedPropertyCreate> properties = default(System.Collections.Generic.IList<ExtendedPropertyCreate>))
        {
            SpaceId = spaceId;
            Upn = upn;
            Location = location;
            FirstName = firstName;
            LastName = lastName;
            ManagerName = managerName;
            Metadata = metadata;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets parent space Id
        /// </summary>
        [JsonProperty(PropertyName = "spaceId")]
        public System.Guid SpaceId { get; set; }

        /// <summary>
        /// Gets or sets user Principal Name, e.g. user@domain
        /// </summary>
        [JsonProperty(PropertyName = "upn")]
        public string Upn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public Location Location { get; set; }

        /// <summary>
        /// Gets or sets first name
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets last Name
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or sets manager name
        /// </summary>
        [JsonProperty(PropertyName = "managerName")]
        public string ManagerName { get; set; }

        /// <summary>
        /// Gets or sets user metadata such as skills, interests, etc.
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public System.Collections.Generic.IList<ExtendedPropertyCreate> Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Upn == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Upn");
            }
            if (Upn != null)
            {
                if (Upn.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Upn", 50);
                }
                if (Upn.Length < 5)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Upn", 5);
                }
            }
            if (Location != null)
            {
                Location.Validate();
            }
            if (FirstName != null)
            {
                if (FirstName.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "FirstName", 50);
                }
                if (FirstName.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "FirstName", 0);
                }
            }
            if (LastName != null)
            {
                if (LastName.Length > 50)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "LastName", 50);
                }
                if (LastName.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "LastName", 0);
                }
            }
            if (ManagerName != null)
            {
                if (ManagerName.Length > 100)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ManagerName", 100);
                }
                if (ManagerName.Length < 0)
                {
                    throw new ValidationException(ValidationRules.MinLength, "ManagerName", 0);
                }
            }
            if (Properties != null)
            {
                foreach (var element in Properties)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
