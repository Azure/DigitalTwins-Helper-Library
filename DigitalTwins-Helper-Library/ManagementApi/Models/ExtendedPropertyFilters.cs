// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ExtendedPropertyFilters
    {
        /// <summary>
        /// Initializes a new instance of the ExtendedPropertyFilters class.
        /// </summary>
        public ExtendedPropertyFilters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExtendedPropertyFilters class.
        /// </summary>
        /// <param name="propertyKey">Optional filter on objects that have the
        /// given property key defined</param>
        /// <param name="propertyValue">Optional filter on the value of the
        /// given property key</param>
        /// <param name="propertyValueSearchType">Optional type of search on
        /// property value. Contains or Equals. Defaults to Equals. Possible
        /// values include: 'Equals', 'Contains'</param>
        public ExtendedPropertyFilters(string propertyKey = default(string), string propertyValue = default(string), string propertyValueSearchType = default(string))
        {
            PropertyKey = propertyKey;
            PropertyValue = propertyValue;
            PropertyValueSearchType = propertyValueSearchType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets optional filter on objects that have the given
        /// property key defined
        /// </summary>
        [JsonProperty(PropertyName = "propertyKey")]
        public string PropertyKey { get; set; }

        /// <summary>
        /// Gets or sets optional filter on the value of the given property key
        /// </summary>
        [JsonProperty(PropertyName = "propertyValue")]
        public string PropertyValue { get; set; }

        /// <summary>
        /// Gets or sets optional type of search on property value. Contains or
        /// Equals. Defaults to Equals. Possible values include: 'Equals',
        /// 'Contains'
        /// </summary>
        [JsonProperty(PropertyName = "propertyValueSearchType")]
        public string PropertyValueSearchType { get; set; }

    }
}
