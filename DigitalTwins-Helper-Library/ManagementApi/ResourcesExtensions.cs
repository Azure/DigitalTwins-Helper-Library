// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Resources.
    /// </summary>
    public static partial class ResourcesExtensions
    {
            /// <summary>
            /// Retrieves resources
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='type'>
            /// Optional resource type filter. Possible values include: 'IotHub'
            /// </param>
            /// <param name='isExternallyCreated'>
            /// Optional externally created filter
            /// </param>
            /// <param name='includes'>
            /// Comma separated list of what to include, for example
            /// "Space,DependentChildren". Defaults to None. Possible values include:
            /// 'None', 'DependentAncestors', 'DependentChildren', 'FullPath', 'Space'
            /// </param>
            /// <param name='spaceId'>
            /// Optionally filter on objects based on their location in the topology
            /// relative to the specified spaceId
            /// </param>
            /// <param name='traverse'>
            /// None (the default) for the specified spaceId only, Down for space and
            /// descendants, Up for spaceId and ancestors, Any for both. Possible values
            /// include: 'None', 'Down', 'Up', 'Span'
            /// </param>
            /// <param name='minLevel'>
            /// Optional filter on minimum level, inclusive
            /// </param>
            /// <param name='maxLevel'>
            /// Optional filter on maximum level, inclusive
            /// </param>
            /// <param name='minRelative'>
            /// Specify if min level is absolute or relative
            /// </param>
            /// <param name='maxRelative'>
            /// Specify if max level is absolute or relative
            /// </param>
            /// <param name='filter'>
            /// Odata Filter parameter
            /// </param>
            /// <param name='orderby'>
            /// Odata OrderBy parameter
            /// </param>
            /// <param name='skip'>
            /// Odata Skip parameter
            /// </param>
            /// <param name='top'>
            /// Odata Top parameter
            /// </param>
            public static System.Collections.Generic.IList<SpaceResourceRetrieve> Retrieve(this IResources operations, string type = default(string), bool? isExternallyCreated = default(bool?), string includes = default(string), System.Guid? spaceId = default(System.Guid?), string traverse = default(string), int? minLevel = default(int?), int? maxLevel = default(int?), bool? minRelative = default(bool?), bool? maxRelative = default(bool?), string filter = default(string), string orderby = default(string), int? skip = default(int?), int? top = default(int?))
            {
                return operations.RetrieveAsync(type, isExternallyCreated, includes, spaceId, traverse, minLevel, maxLevel, minRelative, maxRelative, filter, orderby, skip, top).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves resources
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='type'>
            /// Optional resource type filter. Possible values include: 'IotHub'
            /// </param>
            /// <param name='isExternallyCreated'>
            /// Optional externally created filter
            /// </param>
            /// <param name='includes'>
            /// Comma separated list of what to include, for example
            /// "Space,DependentChildren". Defaults to None. Possible values include:
            /// 'None', 'DependentAncestors', 'DependentChildren', 'FullPath', 'Space'
            /// </param>
            /// <param name='spaceId'>
            /// Optionally filter on objects based on their location in the topology
            /// relative to the specified spaceId
            /// </param>
            /// <param name='traverse'>
            /// None (the default) for the specified spaceId only, Down for space and
            /// descendants, Up for spaceId and ancestors, Any for both. Possible values
            /// include: 'None', 'Down', 'Up', 'Span'
            /// </param>
            /// <param name='minLevel'>
            /// Optional filter on minimum level, inclusive
            /// </param>
            /// <param name='maxLevel'>
            /// Optional filter on maximum level, inclusive
            /// </param>
            /// <param name='minRelative'>
            /// Specify if min level is absolute or relative
            /// </param>
            /// <param name='maxRelative'>
            /// Specify if max level is absolute or relative
            /// </param>
            /// <param name='filter'>
            /// Odata Filter parameter
            /// </param>
            /// <param name='orderby'>
            /// Odata OrderBy parameter
            /// </param>
            /// <param name='skip'>
            /// Odata Skip parameter
            /// </param>
            /// <param name='top'>
            /// Odata Top parameter
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<SpaceResourceRetrieve>> RetrieveAsync(this IResources operations, string type = default(string), bool? isExternallyCreated = default(bool?), string includes = default(string), System.Guid? spaceId = default(System.Guid?), string traverse = default(string), int? minLevel = default(int?), int? maxLevel = default(int?), bool? minRelative = default(bool?), bool? maxRelative = default(bool?), string filter = default(string), string orderby = default(string), int? skip = default(int?), int? top = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveWithHttpMessagesAsync(type, isExternallyCreated, includes, spaceId, traverse, minLevel, maxLevel, minRelative, maxRelative, filter, orderby, skip, top, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='data'>
            /// The resource information
            /// </param>
            public static System.Guid? Create(this IResources operations, SpaceResourceCreate data)
            {
                return operations.CreateAsync(data).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='data'>
            /// The resource information
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Guid?> CreateAsync(this IResources operations, SpaceResourceCreate data, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(data, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves the specified resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Resource Id
            /// </param>
            /// <param name='includes'>
            /// Comma separated list of what to include, for example
            /// "Space,DependentChildren". Defaults to None. Possible values include:
            /// 'None', 'DependentAncestors', 'DependentChildren', 'FullPath', 'Space'
            /// </param>
            public static SpaceResourceRetrieve RetrieveById(this IResources operations, System.Guid id, string includes = default(string))
            {
                return operations.RetrieveByIdAsync(id, includes).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves the specified resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Resource Id
            /// </param>
            /// <param name='includes'>
            /// Comma separated list of what to include, for example
            /// "Space,DependentChildren". Defaults to None. Possible values include:
            /// 'None', 'DependentAncestors', 'DependentChildren', 'FullPath', 'Space'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<SpaceResourceRetrieve> RetrieveByIdAsync(this IResources operations, System.Guid id, string includes = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveByIdWithHttpMessagesAsync(id, includes, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the specified resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Resource Id
            /// </param>
            public static void Delete(this IResources operations, System.Guid id)
            {
                operations.DeleteAsync(id).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the specified resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Resource Id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task DeleteAsync(this IResources operations, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates the specified resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Resource Id
            /// </param>
            /// <param name='data'>
            /// The resource information
            /// </param>
            public static void Update(this IResources operations, System.Guid id, SpaceResourceUpdate data)
            {
                operations.UpdateAsync(id, data).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the specified resource
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Resource Id
            /// </param>
            /// <param name='data'>
            /// The resource information
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task UpdateAsync(this IResources operations, System.Guid id, SpaceResourceUpdate data, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                (await operations.UpdateWithHttpMessagesAsync(id, data, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
