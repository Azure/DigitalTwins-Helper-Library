// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for System.
    /// </summary>
    public static partial class SystemExtensions
    {
            /// <summary>
            /// Retrieve all supported device statuses
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveDeviceStatuses(this ISystem operations)
            {
                return operations.RetrieveDeviceStatusesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported device statuses
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveDeviceStatusesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveDeviceStatusesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all extended property key scopes
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrievePropertyKeyScopes(this ISystem operations)
            {
                return operations.RetrievePropertyKeyScopesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all extended property key scopes
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrievePropertyKeyScopesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrievePropertyKeyScopesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all extended type categories
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveExtendedTypeCategories(this ISystem operations)
            {
                return operations.RetrieveExtendedTypeCategoriesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all extended type categories
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveExtendedTypeCategoriesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveExtendedTypeCategoriesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported targets for matcher's conditions
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveMatcherConditionTargets(this ISystem operations)
            {
                return operations.RetrieveMatcherConditionTargetsAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported targets for matcher's conditions
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveMatcherConditionTargetsAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveMatcherConditionTargetsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported comparisons for matcher's conditions
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveMatcherConditionComparisons(this ISystem operations)
            {
                return operations.RetrieveMatcherConditionComparisonsAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported comparisons for matcher's conditions
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveMatcherConditionComparisonsAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveMatcherConditionComparisonsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported roles
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<RoleDefinitionRetrieve> RetrieveRoles(this ISystem operations)
            {
                return operations.RetrieveRolesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported roles
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<RoleDefinitionRetrieve>> RetrieveRolesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveRolesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported space resource regions
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveSpaceResourceRegions(this ISystem operations)
            {
                return operations.RetrieveSpaceResourceRegionsAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported space resource regions
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveSpaceResourceRegionsAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveSpaceResourceRegionsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported space resource sizes
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveSpaceResourceSizes(this ISystem operations)
            {
                return operations.RetrieveSpaceResourceSizesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported space resource sizes
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveSpaceResourceSizesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveSpaceResourceSizesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported space resource statuses
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveSpaceResourceStatuses(this ISystem operations)
            {
                return operations.RetrieveSpaceResourceStatusesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported space resource statuses
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveSpaceResourceStatusesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveSpaceResourceStatusesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieve all supported timezones
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static System.Collections.Generic.IList<IEnumEntity> RetrieveTimeZones(this ISystem operations)
            {
                return operations.RetrieveTimeZonesAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieve all supported timezones
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<System.Collections.Generic.IList<IEnumEntity>> RetrieveTimeZonesAsync(this ISystem operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.RetrieveTimeZonesWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
