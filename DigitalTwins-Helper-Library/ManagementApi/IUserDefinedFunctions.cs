// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ConnectedGridAccelerator.ManagementApi
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// UserDefinedFunctions operations.
    /// </summary>
    public partial interface IUserDefinedFunctions
    {
        /// <summary>
        /// Gets a list of udfs
        /// </summary>
        /// <param name='names'>
        /// Optional ';' or ',' delimited list of udf names to filter by
        /// </param>
        /// <param name='ids'>
        /// Optional ';' or ',' delimited list of ids to filter by
        /// </param>
        /// <param name='includes'>
        /// Comma separated list of what to include, for example
        /// "ContentInfo,Description". Defaults to None. Possible values
        /// include: 'None', 'Description', 'FullPath', 'Matchers', 'Space',
        /// 'ContentInfo'
        /// </param>
        /// <param name='spaceId'>
        /// Optionally filter on objects based on their location in the
        /// topology relative to the specified spaceId
        /// </param>
        /// <param name='traverse'>
        /// None (the default) for the specified spaceId only, Down for space
        /// and descendants, Up for spaceId and ancestors, Any for both.
        /// Possible values include: 'None', 'Down', 'Up', 'Span'
        /// </param>
        /// <param name='minLevel'>
        /// Optional filter on minimum level, inclusive
        /// </param>
        /// <param name='maxLevel'>
        /// Optional filter on maximum level, inclusive
        /// </param>
        /// <param name='minRelative'>
        /// Specify if min level is absolute or relative
        /// </param>
        /// <param name='maxRelative'>
        /// Specify if max level is absolute or relative
        /// </param>
        /// <param name='filter'>
        /// Odata Filter parameter
        /// </param>
        /// <param name='orderby'>
        /// Odata OrderBy parameter
        /// </param>
        /// <param name='skip'>
        /// Odata Skip parameter
        /// </param>
        /// <param name='top'>
        /// Odata Top parameter
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorInformationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<HttpOperationResponse<System.Collections.Generic.IList<UserDefinedFunctionRetrieve>>> RetrieveWithHttpMessagesAsync(string names = default(string), string ids = default(string), string includes = default(string), System.Guid? spaceId = default(System.Guid?), string traverse = default(string), int? minLevel = default(int?), int? maxLevel = default(int?), bool? minRelative = default(bool?), bool? maxRelative = default(bool?), string filter = default(string), string orderby = default(string), int? skip = default(int?), int? top = default(int?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Creates a udf
        /// </summary>
        /// <remarks>
        /// This is a multi-part request. For more information, see doc
        /// examples.
        /// Key value pairs specified in the Content-Disposition header in the
        /// udf-chunk of the multipart request will be preserved as meta-data
        /// on the stored udf.
        /// </remarks>
        /// <param name='metadata'>
        /// The mime type of this parameter is "application/json" and its
        /// schema is #/definitions/UserDefinedFunctionCreate
        /// </param>
        /// <param name='contents'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorInformationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<HttpOperationResponse<System.Guid?>> CreateWithHttpMessagesAsync(string metadata, System.IO.Stream contents, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets a udf
        /// </summary>
        /// <param name='id'>
        /// Udf Id
        /// </param>
        /// <param name='includes'>
        /// Comma separated list of what to include, for example
        /// "ContentInfo,Description". Defaults to None. Possible values
        /// include: 'None', 'Description', 'FullPath', 'Matchers', 'Space',
        /// 'ContentInfo'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorInformationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<HttpOperationResponse<UserDefinedFunctionRetrieve>> RetrieveByIdWithHttpMessagesAsync(System.Guid id, string includes = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Deletes a udf
        /// </summary>
        /// <param name='id'>
        /// Udf Id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorInformationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<HttpOperationResponse> DeleteWithHttpMessagesAsync(System.Guid id, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Updates a udf
        /// </summary>
        /// <remarks>
        /// This is a multi-part request. For more information, see doc
        /// examples.
        /// </remarks>
        /// <param name='id'>
        /// Udf Id
        /// </param>
        /// <param name='metadata'>
        /// The mime type of this parameter is "application/json" and its
        /// schema is #/definitions/UserDefinedFunctionUpdate
        /// </param>
        /// <param name='contents'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorInformationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<HttpOperationResponse> UpdateWithHttpMessagesAsync(System.Guid id, string metadata, System.IO.Stream contents, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Gets the contents of a udf
        /// </summary>
        /// <param name='id'>
        /// Udf id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorInformationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<HttpOperationResponse<System.IO.Stream>> GetBlobContentsWithHttpMessagesAsync(System.Guid id, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
